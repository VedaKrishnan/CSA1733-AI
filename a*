from queue import PriorityQueue

graph = {
    'A': [('B', 1), ('C', 3)],
    'B': [('D', 3), ('E', 1)],
    'C': [('F', 5)],
    'D': [],
    'E': [('F', 2)],
    'F': []
}

heuristic = {
    'A': 6,
    'B': 4,
    'C': 4,
    'D': 6,
    'E': 2,
    'F': 0
}

def a_star_search(start, goal):
    open_list = PriorityQueue()
    open_list.put((heuristic[start], 0, start, [start]))

    while not open_list.empty():
        f, g, current, path = open_list.get()
        if current == goal:
            print("Path found:", path)
            print("Total cost:", g)
            return
        for neighbor, cost in graph[current]:
            new_g = g + cost
            new_f = new_g + heuristic[neighbor]
            open_list.put((new_f, new_g, neighbor, path + [neighbor]))
    print("No path found")

a_star_search('A', 'F')
