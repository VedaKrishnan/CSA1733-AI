import itertools

graph = [
    [0, 10, 15, 20],
    [10, 0, 35, 25],
    [15, 35, 0, 30],
    [20, 25, 30, 0]
]

n = len(graph)
cities = list(range(n))
min_path_cost = float('inf')
best_path = []

for perm in itertools.permutations(cities[1:]):
    current_path = [0] + list(perm) + [0]
    current_cost = 0
    for i in range(n):
        current_cost += graph[current_path[i]][current_path[i + 1]]
    if current_cost < min_path_cost:
        min_path_cost = current_cost
        best_path = current_path

print("Minimum cost path:", best_path)
print("Minimum cost:", min_path_cost)
