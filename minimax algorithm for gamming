def print_board(b):
    for row in b:
        print(" | ".join(row))
        print("-" * 5)

def winner(b):
    for i in range(3):
        if b[i][0] == b[i][1] == b[i][2] != ' ':
            return b[i][0]
        if b[0][i] == b[1][i] == b[2][i] != ' ':
            return b[0][i]

    if b[0][0] == b[1][1] == b[2][2] != ' ':
        return b[0][0]
    if b[0][2] == b[1][1] == b[2][0] != ' ':
        return b[0][2]

    return None

def minimax(b, maxp):
    win = winner(b)
    if win == 'X':
        return 1
    if win == 'O':
        return -1
    if all(cell != ' ' for row in b for cell in row):
        return 0

    if maxp:
        best = -float('inf')
        for i in range(3):
            for j in range(3):
                if b[i][j] == ' ':
                    b[i][j] = 'X'
                    best = max(best, minimax(b, False))
                    b[i][j] = ' '
        return best
    else:
        best = float('inf')
        for i in range(3):
            for j in range(3):
                if b[i][j] == ' ':
                    b[i][j] = 'O'
                    best = min(best, minimax(b, True))
                    b[i][j] = ' '
        return best

def best_move(b):
    best = -float('inf')
    move = (-1, -1)
    for i in range(3):
        for j in range(3):
            if b[i][j] == ' ':
                b[i][j] = 'X'
                score = minimax(b, False)
                b[i][j] = ' '
                if score > best:
                    best = score
                    move = (i, j)
    return move

def get_user_move(board):
    while True:
        try:
            pos = int(input("Enter your move (1-9): "))
            if pos < 1 or pos > 9:
                print("Invalid position. Choose from 1 to 9.")
                continue
            i = (pos - 1) // 3
            j = (pos - 1) % 3
            if board[i][j] == ' ':
                return i, j
            else:
                print("Position already taken. Try again.")
        except ValueError:
            print("Enter a valid number.")


board = [[' ' for _ in range(3)] for _ in range(3)]

print("Welcome to Tic-Tac-Toe!")
print("You are 'O'. The AI is 'X'. Positions are:")
print("1 | 2 | 3")
print("4 | 5 | 6")
print("7 | 8 | 9\n")


while True:
    print_board(board)

    if winner(board) or all(cell != ' ' for row in board for cell in row):
        break

   
    i, j = get_user_move(board)
    board[i][j] = 'O'

    if winner(board) or all(cell != ' ' for row in board for cell in row):
        break

   
    print("AI is making its move...")
    ai_i, ai_j = best_move(board)
    board[ai_i][ai_j] = 'X'


print_board(board)
win = winner(board)
if win:
    print("Winner:", win)
else:
    print("It's a draw!")
