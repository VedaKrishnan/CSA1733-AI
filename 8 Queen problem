def solve_n_queens(n):
    solutions = []
    board = [-1] * n

    def is_safe(row, col):
        for prev_row in range(row):
            if board[prev_row] == col or abs(board[prev_row] - col) == abs(prev_row - row):
                return False
        return True

    def solve(row=0):
        if row == n:
            solutions.append(board[:])
            return
        for col in range(n):
            if is_safe(row, col):
                board[row] = col
                solve(row + 1)

    solve()
    return solutions

def print_solutions(solutions):
    for sol_num, sol in enumerate(solutions, 1):
        print(f"Solution {sol_num}:")
        for row in sol:
            print(''.join('Q' if i == row else '.' for i in range(len(sol))))
        print()

n = 8
solutions = solve_n_queens(n)
print_solutions(solutions)
